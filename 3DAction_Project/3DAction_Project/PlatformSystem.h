#pragma once

// ==========================================================================
// 【クラス概要】
// プラットフォームごとに継承される、初期化・後処理を統括する基底クラス。
// このクラスはポリモーフィズムを通じて、各プラットフォーム固有の処理を隠蔽する。
// 
// 【設計意図】
// ・派生クラスは1つしか生成できない
// ・GameMain や 描画マネージャーの実装をプラットフォーム側が責任を持って切り替える
// ==========================================================================


// =====================================================
// ヘッダー
// =====================================================
// 基底ヘッダー
#include "NonCopyable.h" // コピーを禁止するヘッダー


// =====================================================
// プラットフォームの基底クラス
// =====================================================
class PlatformSystem : public NonCopyable
{
public:
#if defined(DEBUG) || defined(_DEBUG)
	static bool m_IsCreated; // １つしかないことを保証する
#endif

protected:
	// -----------------------------------------------------------------
	// プラットフォームごとにオーバーライドする
	// -----------------------------------------------------------------
	virtual bool Init() = 0;	    // 初期化 (戻り値で初期化成功かを返す)
	virtual void Uninit() = 0;		// 後処理
	virtual void GameLoop() = 0;    // ゲームループ
	virtual bool GameInit() = 0;    // ゲーム初期化
	virtual void GameMain() = 0;    // ゲームメイン
	virtual void GameUninit() = 0;  // ゲーム後処理

public:
	explicit PlatformSystem(); // コンストラクタ
	~PlatformSystem();         // デストラクタ

	void Execute(); // 起動する
};