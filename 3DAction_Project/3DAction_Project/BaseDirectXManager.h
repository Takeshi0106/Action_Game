#pragma once

// ==================================================================
// 【クラス概要】
// DirectXマネージャーの基底クラス
// デバッグ時に使用した名前を出力するように設定
// ==================================================================


// ==================================================================
// ヘッダー
// ==================================================================
#include <string> // 使用した情報を入れる　リリース時も使用する


// ==================================================================
// グローバル変数
// ==================================================================
namespace {
#if defined(DEBUG) || defined(_DEBUG)
	const std::string Type = "Debug";
#else
	const std::string Type = "Release";
#endif
}


// ==================================================================
// DirectXで使用するマネージャーの基底クラス
// シェーダー・テクスチャ・オブジェクトなどに派生させる
// ==================================================================
class BaseDirectXManager
{
protected:
	// アセットのログ デバッグビルド時に書出し
	const  char* kAssetLogPath;
	// 使用したオブジェクトを入れる
	std::string m_UseObjectList;

	// 外部ファイルに使用したオブジェクトのリストを書き出す
	bool WriteLog();
	// オブジェクトの名前をセットする
	void Log(const char* name);

public:
	// コンストラクタ
	BaseDirectXManager(const char* assetLog)
		: kAssetLogPath(assetLog) {
		m_UseObjectList += Type + "\n";
	}
	// デストラクタ　
	virtual ~BaseDirectXManager() { WriteLog(); }
};

